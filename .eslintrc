{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "@typescript-eslint"
    ],
    "extends": [
        "eslint:recommended",
        // "eslint:all",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "env": {
        "node": true
    },
    "rules": {
        "arrow-parens": [
            2,
            "always"
        ],
        // "brace-style": [
        //     2,
        //     "allman",
        //     {
        //         "allowSingleLine": true
        //     }
        // ],
        "indent": [
            2,
            4,
            {
                "ignoredNodes": [
                    "ConditionalExpression"
                ],
                "MemberExpression": 0,
                "SwitchCase": 1,
                "flatTernaryExpressions": true,
                "ignoreComments": true,
                "FunctionDeclaration": {
                    "parameters": "first"
                },
                "FunctionExpression": {
                    "parameters": "first"
                },
                "CallExpression": {
                    "arguments": "first"
                },
                "ArrayExpression": "first",
                "ObjectExpression": "first"
            }
            // {
            //     "FunctionDeclaration": {
            //         "parameters": "first"
            //     }
            // }
        ],
        "key-spacing": [
            2,
            {
                "align": {
                    "beforeColon": false,
                    "afterColon": true,
                    "on": "value",
                    "mode": "strict"
                }
            }
        ],
        "linebreak-style": 0,
        "max-len": [
            2,
            {
                "code": 120,
                "tabWidth": 4,
                "comments": 160,
                "ignoreComments": true,
                "ignoreUrls": true,
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true,
                "ignoreRegExpLiterals": true
            }
        ],
        "semi": [
            2,
            "always"
        ],
        "@typescript-eslint/naming-convention": [
            2,
            {
                "selector": "typeLike",
                "format": [ "PascalCase" ]
            },
            {
                "selector": "interface",
                "format": [ "PascalCase" ],
                "prefix": [ "I" ]
            },
            {
                "selector": "classProperty",
                "format": [ "camelCase" ],
                "modifiers": ["private"],
                "leadingUnderscore": "require"
            }
        ],
        "@typescript-eslint/no-unused-vars": [2],
        "@typescript-eslint/member-ordering": [
            2,
            {
                "default": [
                    // Index signature
                    "signature",
                    // Static
                    "private-static-field",
                    "protected-static-field",
                    "public-static-field",
                    "private-static-method",
                    "protected-static-method",
                    "public-static-method",
                    // Private fields
                    "private-decorated-field",
                    "private-instance-field",
                    "private-abstract-field",
                    "protected-decorated-field",
                    "protected-instance-field",
                    "protected-abstract-field",

                    "public-decorated-field",
                    "public-instance-field",
                    // Constructors
                    "public-constructor",
                    "protected-constructor",
                    "private-constructor",

                    "public-abstract-field",
                    // Methods
                    "public-decorated-method",
                    "public-instance-method",
                    "public-abstract-method",
                    // Protected helper methods
                    "protected-decorated-method",
                    "protected-instance-method",
                    "protected-abstract-method",
                    // Private helper methods
                    "private-decorated-method",
                    "private-instance-method",
                    "private-abstract-method"
                ]
            }
        ],
        "@typescript-eslint/no-non-null-assertion": 0,
        "@typescript-eslint/no-explicit-any": 0
    },
    "overrides": [
        {
            "files": [
                "*.spec.ts",
            ],
            "rules": {
                "@typescript-eslint/no-empty-function": 0,
                "@typescript-eslint/no-unused-vars": 0
            }
        }
    ]
}
